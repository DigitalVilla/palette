@import "./media";

// Auto cell sizes
$maxAutoCells: 5;
$autoSizes: (
  2: sm,
  3: md,
  4: md3,
  5: lg2,
  6: xl2,
);

// Custom cell sizes
$mediaSize: (false, xs, sm, md, lg, xl);
$maxCells: 6;

.sp-grid {
  --columns: 4;
  --gutter-horizontal: 1vw;
  --gutter-vertical: 1vw;

  display: flex;
  flex-flow: row wrap;
  justify-content: flex-start;
  padding: var(--gutter-vertical) var(--gutter-horizontal);

  &.no-gutter {
    padding: 0;
    .sp-cell {
      padding: 0;
    }
  }

  &.animate .sp-cell {
    transition: flex-basis 0.2s ease-out;
  }

  &.grow {
    .sp-cell {
      flex-grow: 1 !important;
    }
  }

  &.auto,
  &.cell-0,
  &.cell-auto {
    .sp-cell {
      flex-basis: 100%;
      flex-grow: 0;

      @for $i from 2 through $maxAutoCells {
        $media: map-get($autoSizes, $i);
        @include mediaUp($media) {
          flex-basis: calc(100% / #{$i});
        }
      }
    }
  }

  @each $media in $mediaSize {
    @for $i from 1 through $maxCells {
      @if $media {
        &.#{$media}-#{$i},
        &.cell-#{$media}-#{$i} {
          .sp-cell {
            @include mediaUp($media) {
              flex-basis: calc(100% / #{$i});
              flex-grow: 0;
            }
          }
        }
      } @else {
        &.cell-#{$i} .sp-cell {
          flex-basis: calc(100% / #{$i});
          flex-grow: 0;
        }
      }
    }
  }
}

.sp-cell {
  flex-grow: 1;
  padding: var(--gutter-horizontal) var(--gutter-vertical);
  position: relative;

  &.animate {
    transition: flex-basis 0.2s ease-out;
  }

  &.grow,
  &.cell-grow {
    flex-grow: 1 !important;
  }

  @each $media in $mediaSize {
    @for $i from 1 through $maxCells {
      @if $media {
        &.#{$media}-#{$i},
        &.cell-#{$media}-#{$i} {
          @include mediaUp($media) {
            flex-basis: calc(100% / #{$i}) !important;
            flex-grow: 0;
          }
        }
      } @else {
        &.cell-#{$i} {
          flex-basis: calc(100% / #{$i}) !important;
        }
      }
    }
  }
}
