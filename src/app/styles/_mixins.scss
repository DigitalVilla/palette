/* ---------------------
   ------ MIXINS ------
   -------------------- */
@mixin animate($name, $from: true) {
  @keyframes #{$name} {
    @if $from {
      from {
        @content;
      }
    } @else {
      @content;
    }
  }
}

@mixin abs($top, $right, $bottom: auto, $left: auto) {
  position: absolute;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

/* position absolute
  @include flex(2rem, 3rem, auto, auto);
*/
@mixin flex($justify, $align: center, $direction: false) {
  display: flex;
  align-items: $align;
  justify-content: $justify;

  @if $direction {
    flex-direction: $direction;
  }
}

/// Event wrapper
/// @param {Bool} $self [false] - Whether or not to include current selector
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active {
      @content;
    }
  }
}

// Display mixins
@mixin show($screen: $screen-md) {
  display: none;

  @media only screen and (min-width: $screen) {
    display: block;
  }
}

@mixin hide($screen: $screen-md) {
  display: block;

  @media only screen and (min-width: $screen) {
    display: none;
  }
}

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1==$u2 and $u1==$u3 and $u1==$u4 {
    & {
      font-size: $min-font-size;

      @media screen and (min-width: $min-vw) {
        font-size: calc(
          #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
            ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
        ) !important;
      }

      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}
